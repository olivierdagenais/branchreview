<?xml version="1.0" encoding="utf-8" ?>
<project name="Branch And Review Tools" default="deploy"
    xmlns="http://branchreview.googlecode.com/schemas/nant.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://branchreview.googlecode.com/schemas/nant.xsd Tools/NAnt.xsd">

    <loadtasks assembly="Tools/nantcontrib/bin/NAnt.Contrib.Tasks.dll" />
    <loadtasks assembly="Tools/TextileNET/Textile.NAnt.dll" />
    <loadtasks assembly="Tools/SoftwareNinjas.NAnt.dll" />

    <property name="configuration" value="Debug" overwrite="false" />
    <property name="projects" value="Core,Gui" />

    <target name="schema">
        <nantschema output="Tools/NAnt.xsd" target-ns="http://branchreview.googlecode.com/schemas/nant.xsd"/>
        <echo message="Don't forget to patch back the NDoc section!"/>
    </target>

    <target name="clean">
        <clean projects="${projects}" configuration="${configuration}" />
    </target>

    <target name="customize" depends="clean">
        <customizeAssembly projects="${projects}" />
    </target>

    <target name="compile" depends="customize">
        <msbuild project="BranchAndReviewTools.sln">
            <arg value="/property:Configuration=${configuration}" />
            <arg value="/verbosity:minimal" />
        </msbuild>
    </target>

    <target name="test" depends="compile">
        <foreach item="String" in="${projects}" delim="," property="project">
            <echo message="Testing ${project}..."/>
            <property
                name="baseFile"
                value="${project}.Tests/bin/${configuration}/SoftwareNinjas.BranchAndReviewTools.${project}.Tests" />
            <exec program="Tools/nunit/nunit-console-x86.exe">
                <arg file="${baseFile}.dll" if="${file::exists(baseFile + '.dll')}" />
                <arg file="${baseFile}.exe" if="${file::exists(baseFile + '.exe')}" />
                <arg value="/nologo" />
                <arg value="/nodots" />
            </exec>
            <!-- TODO: verify assemblies with FxCop -->
        </foreach>
    </target>

    <target name="documentation" depends="test">
        <textile todir="Documentation">
            <fileset basedir="Wiki">
                <include name="**/*.wiki"/>
            </fileset>
        </textile>
    </target>

    <target name="deploy" depends="documentation">
        <xmlpeek file="Version.xml" xpath="/version/@major" property="major" />
        <xmlpeek file="Version.xml" xpath="/version/@minor" property="minor" />
        <if test="${environment::variable-exists('BUILD_NUMBER')}">
            <property name="buildNumber" value="${environment::get-variable('BUILD_NUMBER')}"/>
        </if>
        <if test="${not environment::variable-exists('BUILD_NUMBER')}">
            <property name="buildNumber" value="private"/>
        </if>
        <property name="versionFolder" value="SoftwareNinjas.BranchAndReviewTools-${major}.${minor}.${buildNumber}"/>

        <delete dir="Deploy" failonerror="false"/>
        <mkdir dir="Deploy/${versionFolder}"/>
        <copy todir="Deploy/${versionFolder}" flatten="true">
            <fileset>
                <include name="*/bin/${configuration}/SoftwareNinjas.*.dll"/>
                <include name="*/bin/${configuration}/SoftwareNinjas.*.exe"/>
                <include name="*/bin/${configuration}/SoftwareNinjas.*.xml"/>
                <include name="Gui/SciLexer*.dll"/>
                <include name="Gui/ScintillaNet.*"/>
                <exclude name="*.Tests/bin/**"/>
            </fileset>
        </copy>
        <copy todir="Deploy/${versionFolder}/doc">
            <fileset basedir="Documentation">
                <include name="**"/>
            </fileset>
        </copy>

        <zip zipfile="Deploy/${versionFolder}.zip">
            <fileset basedir="Deploy">
                <include name="${versionFolder}/**"/>
            </fileset>
        </zip>

        <!-- TODO: create installer -->
    </target>

    <target name="release">
        <property name="configuration" value="release" />
        <call target="deploy" />
    </target>
</project>
