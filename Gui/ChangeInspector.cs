using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Windows.Forms;
using SoftwareNinjas.BranchAndReviewTools.Core;
using SoftwareNinjas.Core;

namespace SoftwareNinjas.BranchAndReviewTools.Gui
{
    public partial class ChangeInspector : UserControl
    {
        public ChangeInspector()
        {
            InitializeComponent();
            ChangeLog.InitializeDefaults();
            PatchViewer.InitializeDefaults();
            PatchViewer.InitializeDiff();
        }

        public string PatchText
        {
            get { return PatchViewer.Text; }
            set { PatchViewer.SetReadOnlyText(value); }
        }

        // given a Context (the current BranchId in the "Pending Changes" case and the current revision in "Log"),
        // produces a table of the changes involved
        public Func<object, DataTable> ChangesFunction { get; set; }
        // given one or more "ID"s from the table generated by ChangesFunction, produces a patch
        public Func<IEnumerable<object>, string> ComputeDifferencesFunction { get; set; }
        public Func<IEnumerable<object>, IList<MenuAction>> ActionsForChangesFunction { get; set; }

        public object Context { get; set; }

        private IEnumerable<object> FindSelectedIds()
        {
            var selectedRows = FileGrid.SelectedRows.Cast<DataGridViewRow>();
            return selectedRows.Map(row => row.Cells["ID"].Value);
        }
    }
}
